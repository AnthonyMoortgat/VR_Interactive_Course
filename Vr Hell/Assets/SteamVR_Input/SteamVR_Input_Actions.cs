//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_testCourse_Teleport;
        
        private static SteamVR_Action_Boolean p_testCourse_GrabGrip;
        
        private static SteamVR_Action_Pose p_testCourse_Pose;
        
        private static SteamVR_Action_Skeleton p_testCourse_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_testCourse_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_testCourse_Squeeze;
        
        private static SteamVR_Action_Boolean p_testCourse_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_testCourse_MenuLeft;
        
        private static SteamVR_Action_Boolean p_testCourse_MenuRight;
        
        private static SteamVR_Action_Vibration p_testCourse_Haptic;
        
        public static SteamVR_Action_Boolean testCourse_Teleport
        {
            get
            {
                return SteamVR_Actions.p_testCourse_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean testCourse_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_testCourse_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose testCourse_Pose
        {
            get
            {
                return SteamVR_Actions.p_testCourse_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton testCourse_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_testCourse_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton testCourse_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_testCourse_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single testCourse_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_testCourse_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean testCourse_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_testCourse_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean testCourse_MenuLeft
        {
            get
            {
                return SteamVR_Actions.p_testCourse_MenuLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean testCourse_MenuRight
        {
            get
            {
                return SteamVR_Actions.p_testCourse_MenuRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration testCourse_Haptic
        {
            get
            {
                return SteamVR_Actions.p_testCourse_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.testCourse_Teleport,
                    SteamVR_Actions.testCourse_GrabGrip,
                    SteamVR_Actions.testCourse_Pose,
                    SteamVR_Actions.testCourse_SkeletonLeftHand,
                    SteamVR_Actions.testCourse_SkeletonRightHand,
                    SteamVR_Actions.testCourse_Squeeze,
                    SteamVR_Actions.testCourse_HeadsetOnHead,
                    SteamVR_Actions.testCourse_MenuLeft,
                    SteamVR_Actions.testCourse_MenuRight,
                    SteamVR_Actions.testCourse_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.testCourse_Teleport,
                    SteamVR_Actions.testCourse_GrabGrip,
                    SteamVR_Actions.testCourse_Pose,
                    SteamVR_Actions.testCourse_SkeletonLeftHand,
                    SteamVR_Actions.testCourse_SkeletonRightHand,
                    SteamVR_Actions.testCourse_Squeeze,
                    SteamVR_Actions.testCourse_HeadsetOnHead,
                    SteamVR_Actions.testCourse_MenuLeft,
                    SteamVR_Actions.testCourse_MenuRight};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.testCourse_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.testCourse_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.testCourse_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.testCourse_Teleport,
                    SteamVR_Actions.testCourse_GrabGrip,
                    SteamVR_Actions.testCourse_HeadsetOnHead,
                    SteamVR_Actions.testCourse_MenuLeft,
                    SteamVR_Actions.testCourse_MenuRight};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.testCourse_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.testCourse_SkeletonLeftHand,
                    SteamVR_Actions.testCourse_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.testCourse_Teleport,
                    SteamVR_Actions.testCourse_GrabGrip,
                    SteamVR_Actions.testCourse_Squeeze,
                    SteamVR_Actions.testCourse_HeadsetOnHead,
                    SteamVR_Actions.testCourse_MenuLeft,
                    SteamVR_Actions.testCourse_MenuRight};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_testCourse_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/TestCourse/in/Teleport")));
            SteamVR_Actions.p_testCourse_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/TestCourse/in/GrabGrip")));
            SteamVR_Actions.p_testCourse_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/TestCourse/in/Pose")));
            SteamVR_Actions.p_testCourse_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/TestCourse/in/SkeletonLeftHand")));
            SteamVR_Actions.p_testCourse_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/TestCourse/in/SkeletonRightHand")));
            SteamVR_Actions.p_testCourse_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/TestCourse/in/Squeeze")));
            SteamVR_Actions.p_testCourse_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/TestCourse/in/HeadsetOnHead")));
            SteamVR_Actions.p_testCourse_MenuLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/TestCourse/in/MenuLeft")));
            SteamVR_Actions.p_testCourse_MenuRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/TestCourse/in/MenuRight")));
            SteamVR_Actions.p_testCourse_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/TestCourse/out/Haptic")));
        }
    }
}
